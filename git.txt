Небольшая инструкция-напоминалка по гид, для основыных команд
git --version (проверка версии)
git config --global user.name "" (глабальное имя)
git config --global user.mail "" (глобальная почта)
-
Для локольного проекта устанавливается без флага --global
-
git init (истализация только для Windows, в MacOs и Linux по умолчанию)
git add (идексация кандидатов для сохранения)
git commit -m "" (сохранение)
-
флаг -m "" используется для удобства комментария
-
git status (проверка состояния на какой ветке находимся, что сохраненно или не удаленно)
git rm (полное удаление файла/папки из гид)
git log (история сохранений-коммитов, выход из историй :q, :z, Ctrl+z)
-
git log  --pretty=oneline (хэш истории)
git log  --pretty=oneline --max-count=2 (хэш истории, задается точное число)
git log  --pretty=oneline --all (весь хэш истории)
git log  --pretty=oneline --author (хэш истории по автору)
git log  --pretty=format:"%h" (краткий формат хэша истории)
git log  --pretty=format:"%h - " (текстовой формат)
git log  --pretty=format:"%h - %s " (комментарий)
git log  --pretty=format:"%h - %s : %ad [ %an]" (дата и автор)
git log  --pretty=format:"%h - %s : %ad [ %an]" --date=short (дата)
-
git reset HEAD (возвращение статуса до индексации или до сохранения)
-
git checkout (для перехода на другую ветку)
git checkout -b (для создания ветки)
-
git brauch (используется для создания веток)
git brauch -d <название ветки> (используется для удаления веток)
-
ls (для просмотра файла)
git cat-file (просмотр типа объекта)
git ls-tree (для просмотра дерева объекта)
git revert HEAD --no-edit (отмена коммита)
git cherry-pick (для взятия изменения в отмененом коммитом и попытатка применить их заново в новом коммите)
git merge (для объединение веток)
git pull (для объединения изменений, присутствующих в удаленном репозитории)
git rebase (пеперенос изменений с одной ветки на другую ветку)
-
git diff (для выявления различий)
git diff --base <имя-файла> (для выявления различий с базовыми файлами)
git diff <ветвь-источник> <ветвь-цель> (для простого отображения различий)
-
git archive (для создания файлов формате .zip и .tar)
git grep (поиск слов в дереве)
gitk (графический интерфейс локального репозитория)
git instaweb (запуск веб-сервера на локальном репозитории)
git gc (для оптимизации и удаления системы)
git fsck (проверка целостности файловой системы, с индефикацией поврежденных файлов)
git prune (удаляются файлы не имеющие входящих указаний)
git stash (временное сохранение, без попадания в коммит)
git tag (для маркировки с помощью простых меток)
git show (для просмотра информации о любом git объекте)
git fetch (достает все объекты из удаленного репозитория)